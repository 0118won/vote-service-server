plugins {
    id 'java'
    id 'com.google.protobuf' version '0.9.5'
    id 'org.springframework.boot' version '3.4.5'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'org.zerock'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // Default dependencies
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    implementation 'javax.annotation:javax.annotation-api:1.3.2'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // lombok dependencies
    annotationProcessor 'org.projectlombok:lombok'
    compileOnly 'org.projectlombok:lombok'

    // markadb dependencies
    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'

    // gRPC dependencies
    implementation 'io.grpc:grpc-netty-shaded:1.66.0'
    implementation 'io.grpc:grpc-protobuf:1.66.0'
    implementation 'io.grpc:grpc-stub:1.66.0'

    // protobuffer dependencies
    implementation 'com.google.protobuf:protobuf-java:4.28.2'
    implementation 'com.google.protobuf:protobuf-java-util:4.28.2'

    // swagger openapi dependencies
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.8'
}

sourceSets {
    main {
        java {
            srcDirs 'build/generated/source/proto/main/grpc'
            srcDirs 'build/generated/source/proto/main/java'
        }
    }
}

tasks.named('test') {
    useJUnitPlatform()
}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:4.28.2"
    }

    clean {
        delete generatedFilesBaseDir
    }

    plugins {
        grpc {
            artifact = 'io.grpc:protoc-gen-grpc-java:1.72.0'
        }
    }

    generateProtoTasks {
        all()*.plugins {
            grpc {}
        }
    }
}

compileJava {
    dependsOn 'generateProto'
}